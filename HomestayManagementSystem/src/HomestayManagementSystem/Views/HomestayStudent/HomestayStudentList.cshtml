@using HomestayManagementSystem.Models
@{
    ViewData["Title"] = nameof(HomestayStudent);
}

<div class="container-fluid">
    <h5>HomestayStudent List</h5>
</div>

@(Html.Kendo().Grid<HomestayStudent>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(x => x.HomestayStudentId).Width(80).Title("No");
        columns.Bound(x => x.HomestayFamily).Width(250);
        columns.Bound(x => x.SiteName).Width(110).Filterable(ftb => ftb.Multi(true).Search(true).CheckAll(true)).Title("Site");
        columns.Bound(x => x.SiteLocationName).Width(140).Filterable(ftb => ftb.Multi(true).Search(true).CheckAll(true)).Title("SiteLocation");
        columns.Bound(x => x.Student.FirstName).Width(170);
        columns.Bound(x => x.Student.LastName).Width(170);
        columns.Bound(x => x.Student.StudentNo).Width(130);
        columns.Bound(x => x.Arrival).Format("{0:d}").Width(120);
        columns.Bound(x => x.Departure).Format("{0:d}").Width(120);
        columns.Bound(x => x.Amount).Format("{0:c}").Width(130).ClientFooterTemplate("#=kendo.toString(sum, 'c')#").ClientGroupFooterTemplate("#=kendo.toString(sum, 'c')#");
        columns.Bound(x => x.PaidAmount).Format("{0:c}").Width(150).ClientFooterTemplate("#=kendo.toString(sum, 'c')#").ClientGroupFooterTemplate("#=kendo.toString(sum, 'c')#");
        columns.Bound(x => x.Balance).ClientTemplate("# if (Balance == 0) {# <div style='color:green;'>#=kendo.toString(Balance, 'c')#</div> #} else if (Balance > 0) {# <div style='color:blue;'>#=kendo.toString(Balance, 'c')#</div> #} else {# <div style='color:red;'>#=kendo.toString(Balance, 'c')#</div> #} #").Width(130).ClientFooterTemplate("#=kendo.toString(sum, 'c')#").ClientGroupFooterTemplate("#=kendo.toString(sum, 'c')#");
        columns.Bound(x => x.DueDate).Format("{0:d}").Width(120);
        columns.Bound(x => x.PaidDate).Format("{0:d}").Width(120);
        columns.Bound(x => x.IsContractSigned).Width(200);
        columns.Bound(x => x.IsActive).Width(110);
        columns.Bound(x => x.CreatedDate).Format("{0:g}").Width(180);
        columns.Bound(x => x.CreatedUserName).Width(200);
        columns.Bound(x => x.UpdatedDate).Format("{0:g}").Width(180);
        columns.Bound(x => x.UpdatedUserName).Width(200);
    })
    .ClientDetailTemplateId("detail-template")
    .ToolBar(t => t.ClientTemplateId("customClientTemplate"))
    .Scrollable(s => s.Height(840))
    .Events(x => x.Change("onChange"))
    .Groupable()
    .Filterable(x => x.Extra(false))
    .Sortable()
    .Resizable(x => x.Columns(true))
    .Selectable(x => x.Mode(GridSelectionMode.Single))
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10)
    )
    .Excel(excel => excel
        .FileName("HomestayStudent List.xlsx")
        .Filterable(true)
        .ProxyURL(Url.Action("SaveExcelExport", "Common"))
        .AllPages(true)
    )
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(18)
        .Read(read => read.Action("Read", "HomestayStudent"))
        .Filter(x => x.Add(x1 => x1.IsActive).IsEqualTo(true))
        .Group(x => x.Add(x1 => x1.HomestayFamily))
        .Aggregates(x =>
        {
            x.Add(x1 => x1.Amount).Sum();
            x.Add(x1 => x1.PaidAmount).Sum();
            x.Add(x1 => x1.Balance).Sum();
        })
        .ServerOperation(false)
        .Model(x =>
        {
            x.Id(x1 => x1.HomestayStudentId);
        })
    ))

<script id="detail-template" type="text/x-kendo-template">
        <div>Address : #: Homestay.Address # </div>
        <div>PostCode : #: Homestay.PostCode # </div>
        <div>Phone : #: Homestay.Phone # </div>
        <div>Email : #: Homestay.Email # </div>
    </script>

<script type="text/x-kendo-template" id="customClientTemplate">
    <a class='k-button k-button-icontext' onClick="openDialog(0);"><img src="../images/Add to Favorites-48.png" class="submenu_icon" /> Add HomestayStudent</a>
    <a class='k-button k-button-icontext k-grid-excel'><img src="../images/Microsoft Excel-48.png" class="submenu_icon" /> Export to Excel</a>
</script>

@(Html.Kendo().Window()
        .Name("homestayStudentPopup")
        .Title("HomestayStudent Detail")
        .LoadContentFrom("HomestayStudentDetailPartial", "HomestayStudent")
        .Events(x => x.Activate("homestayStudentPopupActivate"))
        .Draggable(true)
        .Visible(false)
        .AutoFocus(true)
        .Modal(true)
        .Pinned(true)
        .Scrollable(true)
        .MinWidth(400)
        .MaxWidth(400)
        .Height(650)
)

<script>

    function homestayStudentPopupActivate(e) {
        $('#homestayStudentPopup').closest(".k-window").css({
            top: window.innerHeight / 2 - $('#homestayStudentPopup').parent()[0].scrollHeight / 2,
            left: window.innerWidth / 2 - $('#homestayStudentPopup').parent()[0].scrollWidth / 2
        });
    }

    function onChange(arg) {
        var data = this.dataItem(this.select());
        openDialog(data.id);
    }

    function closePopup(isRefresh) {
        $("#homestayStudentPopup").data("kendoWindow").close();

        if (isRefresh) {
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.read();
            grid.refresh();
        }
    }

    function openDialog(homestayStudentId) {
        var homestayStudentPopup = $("#homestayStudentPopup").data("kendoWindow");
        homestayStudentPopup.refresh({
            url: "/HomestayStudent/HomestayStudentDetailPartial/",
            data: { homestayStudentId: homestayStudentId }
        });

        homestayStudentPopup.open();
    }

</script>